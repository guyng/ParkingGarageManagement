// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParkingGarageManagement.cs.Models;

namespace ParkingGarageManagement.cs.Migrations
{
    [DbContext(typeof(GarageContext))]
    [Migration("20190225165641_tfg")]
    partial class tfg
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ParkingGarageManagement.cs.Models.Domain.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "A"
                        },
                        new
                        {
                            Id = 2,
                            Name = "B"
                        },
                        new
                        {
                            Id = 3,
                            Name = "C"
                        });
                });

            modelBuilder.Entity("ParkingGarageManagement.cs.Models.Domain.Lot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckIn");

                    b.Property<int>("LotPosition");

                    b.Property<int>("VehicleId");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("Lots");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CheckIn = new DateTime(2019, 2, 23, 18, 56, 41, 233, DateTimeKind.Local).AddTicks(3660),
                            LotPosition = 0,
                            VehicleId = 0
                        });
                });

            modelBuilder.Entity("ParkingGarageManagement.cs.Models.Domain.LotRange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MaxRange");

                    b.Property<int>("MinRange");

                    b.Property<int>("TicketId");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.ToTable("LotRanges");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaxRange = 10,
                            MinRange = 1,
                            TicketId = 1
                        },
                        new
                        {
                            Id = 2,
                            MaxRange = 30,
                            MinRange = 11,
                            TicketId = 2
                        },
                        new
                        {
                            Id = 3,
                            MaxRange = 60,
                            MinRange = 31,
                            TicketId = 3
                        });
                });

            modelBuilder.Entity("ParkingGarageManagement.cs.Models.Domain.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("PersonTz");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.HasIndex("PersonTz")
                        .IsUnique()
                        .HasFilter("[PersonTz] IS NOT NULL");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Guy",
                            PersonTz = "302119282",
                            Phone = "0504029472"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Duy",
                            PersonTz = "304119282",
                            Phone = "0504529472"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ruy",
                            PersonTz = "307119282",
                            Phone = "0504929472"
                        });
                });

            modelBuilder.Entity("ParkingGarageManagement.cs.Models.Domain.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cost");

                    b.Property<int>("MaxHeight");

                    b.Property<int>("MaxLength");

                    b.Property<int>("MaxWidth");

                    b.Property<string>("Name");

                    b.Property<int>("TicketTypeId");

                    b.Property<int>("TimeLimit");

                    b.HasKey("Id");

                    b.HasIndex("TicketTypeId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cost = 200,
                            MaxHeight = -1,
                            MaxLength = -1,
                            MaxWidth = -1,
                            Name = "Vip",
                            TicketTypeId = 1,
                            TimeLimit = 72
                        },
                        new
                        {
                            Id = 2,
                            Cost = 100,
                            MaxHeight = 2500,
                            MaxLength = 2500,
                            MaxWidth = 2500,
                            Name = "Value",
                            TicketTypeId = 2,
                            TimeLimit = 48
                        },
                        new
                        {
                            Id = 3,
                            Cost = 50,
                            MaxHeight = 2000,
                            MaxLength = 2000,
                            MaxWidth = 2000,
                            Name = "Regular",
                            TicketTypeId = 3,
                            TimeLimit = 24
                        });
                });

            modelBuilder.Entity("ParkingGarageManagement.cs.Models.Domain.TicketClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassId");

                    b.Property<int>("TicketId");

                    b.HasKey("Id");

                    b.ToTable("TicketClasses");
                });

            modelBuilder.Entity("ParkingGarageManagement.cs.Models.Domain.TicketType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("TicketTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = 2
                        },
                        new
                        {
                            Id = 2,
                            Type = 1
                        },
                        new
                        {
                            Id = 3,
                            Type = 0
                        });
                });

            modelBuilder.Entity("ParkingGarageManagement.cs.Models.Domain.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PersonId");

                    b.Property<int>("TicketId");

                    b.Property<int>("VehicleHeight");

                    b.Property<int>("VehicleLength");

                    b.Property<int>("VehicleTypeId");

                    b.Property<int>("VehicleWidth");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PersonId = 1,
                            TicketId = 3,
                            VehicleHeight = 1800,
                            VehicleLength = 1200,
                            VehicleTypeId = 1,
                            VehicleWidth = 1500
                        },
                        new
                        {
                            Id = 2,
                            PersonId = 1,
                            TicketId = 2,
                            VehicleHeight = 2200,
                            VehicleLength = 1200,
                            VehicleTypeId = 2,
                            VehicleWidth = 1500
                        },
                        new
                        {
                            Id = 3,
                            PersonId = 1,
                            TicketId = 1,
                            VehicleHeight = 2600,
                            VehicleLength = 1200,
                            VehicleTypeId = 3,
                            VehicleWidth = 1500
                        });
                });

            modelBuilder.Entity("ParkingGarageManagement.cs.Models.Domain.VehicleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.ToTable("VehicleTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClassId = 1,
                            Name = "Motorcycle"
                        },
                        new
                        {
                            Id = 2,
                            ClassId = 1,
                            Name = "Private"
                        },
                        new
                        {
                            Id = 3,
                            ClassId = 1,
                            Name = "Crossover"
                        },
                        new
                        {
                            Id = 4,
                            ClassId = 2,
                            Name = "SUV"
                        },
                        new
                        {
                            Id = 5,
                            ClassId = 2,
                            Name = "Van"
                        },
                        new
                        {
                            Id = 6,
                            ClassId = 3,
                            Name = "Truck"
                        });
                });

            modelBuilder.Entity("ParkingGarageManagement.cs.Models.Domain.Lot", b =>
                {
                    b.HasOne("ParkingGarageManagement.cs.Models.Domain.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ParkingGarageManagement.cs.Models.Domain.LotRange", b =>
                {
                    b.HasOne("ParkingGarageManagement.cs.Models.Domain.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ParkingGarageManagement.cs.Models.Domain.Ticket", b =>
                {
                    b.HasOne("ParkingGarageManagement.cs.Models.Domain.TicketType", "TicketType")
                        .WithMany()
                        .HasForeignKey("TicketTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ParkingGarageManagement.cs.Models.Domain.Vehicle", b =>
                {
                    b.HasOne("ParkingGarageManagement.cs.Models.Domain.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ParkingGarageManagement.cs.Models.Domain.VehicleType", "VehicleType")
                        .WithMany()
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ParkingGarageManagement.cs.Models.Domain.VehicleType", b =>
                {
                    b.HasOne("ParkingGarageManagement.cs.Models.Domain.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
